// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sales.sql

package sqlc

import (
	"context"
)

const getSalesByClientID = `-- name: GetSalesByClientID :many
SELECT id, amount, is_paid, client_id, created_at, updated_at FROM sales WHERE client_id = ?
`

func (q *Queries) GetSalesByClientID(ctx context.Context, clientID int64) ([]Sale, error) {
	rows, err := q.db.QueryContext(ctx, getSalesByClientID, clientID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Sale
	for rows.Next() {
		var i Sale
		if err := rows.Scan(
			&i.ID,
			&i.Amount,
			&i.IsPaid,
			&i.ClientID,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
